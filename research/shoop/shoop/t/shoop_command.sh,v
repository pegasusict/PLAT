head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2001.03.08.19.02.12;	author doogie;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.06.01.03.27;	author doogie;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.05.10.09.15;	author doogie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Because t/regress used to munge variables, several false positives were
being generated.  Now, these should all be fixed.
@
text
@#!/bin/sh -e
# Inheritance regression test. Also sets basic methods and variables.
. ${SHOOPSH:-/usr/bin/shoop.sh}
. ${SHOOPMOD:-/usr/share/shoop/modules}/use.sh

ok "" 0 ""		OBJECT . use shoop_command

ok "" 0 ""		SHOOP . command . register p 'echo -n "TRUEOBJ=$TRUEOBJ TRYOBJ=$TRYOBJ METH=$METH REST='"'"'$@@'"'"'";return'

ok "" 0 "TRUEOBJ=SHOOP TRYOBJ=SHOOP METH=command REST='. register'"		SHOOP p command . register

tests 3
@


1.2
log
@It now works.
@
text
@d8 1
a8 1
ok "" 0 ""		SHOOP . command . register p 'echo "TRUEOBJ=$TRUEOBJ TRYOBJ=$TRYOBJ METH=$METH REST='"'"'$@@'"'"'";return'
@


1.1
log
@shoop_command allows one to register additional commands, other than '.' or
'd'.  It doesn't fully work, yet, however.  Also, the last checkin
accidentally had the test script referenced in the makefile.
@
text
@d8 1
a8 1
ok "" 0 ""		SHOOP . command . register p 'echo "TRUEOBJ=$TRUEOBJ TRYOBJ=$TRYOBJ METH=$METH REST='\''$@@'\''";return'
d10 1
a10 1
ok "" 0 "TRUEOBJ=SHOOP TRYOBJ=SHOOP METH=command REST=. register"		SHOOP p command . register
@

