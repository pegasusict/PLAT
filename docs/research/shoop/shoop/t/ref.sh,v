head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2001.03.04.10.38.20;	author doogie;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.02.19.34.46;	author doogie;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.02.07.31.05;	author doogie;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.22.18.24.53;	author doogie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Set 'parent' instead of 'parents'
@
text
@#!/bin/sh -e
# Inheritance regression test. Also sets basic methods and variables.
. ${SHOOPSH:-/usr/share/shoop/shoop.sh}
. ${SHOOPMOD:-/usr/share/shoop/modules}/use.sh

# setup
ok "" 0 ""	OBJECT . use ref
ok "" 0 1	OBJECT . counter = 1
ok "" 0 ""	OBJECT . incr :p '$THIS . counter = $(($($THIS . counter) + 1))'
ok "" 0 ""	OBJECT . new object

# sanity check
ok "" 0 1	OBJECT . counter
ok "" 0 2	OBJECT . incr
ok "" 0 2	OBJECT . counter
ok "" 0 3	OBJECT . incr
ok "" 0 3	OBJECT . counter

# creating a simple reference
ok "" 0 ""	OBJECT_REF . new OBJECT o

# old code incorrectly set 'parents', instead of 'parent'
ok "" 0 "OBJECT_REF OBJECT"	eval '$o' . parent

# getting/setting
ok "" 0 "3"	eval '$o' . counter
ok "" 0 "10"	eval '$o' . counter = 10
ok "" 0 "10"	eval '$o' . counter

# methods
ok "" 0 ""	eval '$o' . decr :p \''$THIS . counter = $(($($THIS . counter) - 1))'\'
ok "" 0 "11"	eval '$o' . incr
ok "" 0 "11"	eval '$o' . counter
ok "" 0 "10"	eval '$o' . decr
ok "" 0 "10"	eval '$o' . counter

# sanity check
ok "" 0 3	OBJECT . counter
ok "" 0 3	object . counter
ok "" 0 10	eval '$o' . counter

# creating a complex reference
ok "" 0 ""	OBJECT_REF . new OBJECT object . o

# getting/setting
ok "" 0 "3"	object . o . counter
ok "" 0 "10"	object . o . counter = 10
ok "" 0 "10"	object . o . counter

# methods
ok "" 0 ""	object . o . decr :p '$THIS . counter = $(($($THIS . counter) - 1))'
ok "" 0 "11"	object . o . incr
ok "" 0 "11"	object . o . counter
ok "" 0 "10"	object . o . decr
ok "" 0 "10"	object . o . counter

# sanity check
ok "" 0 3	OBJECT . counter
ok "" 0 3	object . counter
ok "" 0 10	object . o . counter

tests 34
@


1.3
log
@Test simple references as well.
@
text
@d22 3
d62 1
a62 1
tests 33
@


1.2
log
@Moved all reference code out of shoop, and into a separate module.  All
created references has OBJECT_REF as their primary parent, and multiple
inheritance is used to support supplementary classes.  There areno docs
yet, see the testing scripts as to how to use.
@
text
@d19 21
a39 1
# creating the reference
d59 1
a59 1
tests 21
@


1.1
log
@Added support for object references.  'OBJECT . new myobj . ref' gives you
the ability to do 'myobj . ref . foo'.
@
text
@d4 1
d7 1
d20 1
a20 1
ok "" 0 ""	OBJECT . new object . o
d39 1
a39 1
tests 20
@

