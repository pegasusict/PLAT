head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2001.03.08.19.02.12;	author doogie;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.06.08.24.29;	author doogie;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.05.09.50.30;	author doogie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Because t/regress used to munge variables, several false positives were
being generated.  Now, these should all be fixed.
@
text
@#!/bin/sh -e
# Inheritance regression test. Also sets basic methods and variables.
. ${SHOOPSH:-/usr/bin/shoop.sh}

ok "" 0 'a'	OBJECT . var = a
ok "" 0 'a'	OBJECT . var
ok "" 0 ''	OBJECT . method : "echo -n a"
ok "" 0 'a'	OBJECT . method

stuff="a'b'c'"
stuff_fixed="a'\''b'\''c'\''"
ok "_shoop_tr" 0 "$stuff_fixed"	eval '_shoop_tr "'\''" "'\''\\'\'\''" "$stuff"; echo -n "$out"'

stuff="aaaaa'bbbbbÅccccc"
stuff_fixed="aaaaa'\''bbbbbÅccccc"
ok "_shoop_tr" 0 "$stuff_fixed"	eval '_shoop_tr "'\''" "'\''\\'\'\''" "$stuff"; echo -n "$out"'

c=8
for meta in \` \~ \! \@@ \# \$ \% \^ \& \* \( \) \{ \} \[ \] \| \\ \; \' \" \< \> \? ' '; do
	# Let's make sure the testing framework can handle the metacharacters
	ok "$meta" 0 "$meta"		echo -n "$meta"

	# Now let's test shoop
	ok "set-$meta" 0 "a${meta}a"	OBJECT . var = "a${meta}a"
	ok "get-$meta" 0 "a${meta}a"	OBJECT . var

	_shoop_tr "'" "'\\''" "$meta"
	ok "method-$meta" 0 ""		OBJECT . method : "echo -n 'a${out}a'"
	ok "call-$meta" 0 "a${meta}a"	OBJECT . method

	c=$(($c+5))
	allmeta="$allmeta$meta"
done

# All metachars at once
ok "set-all" 0 "$allmeta$allmeta$allmeta"	OBJECT . var = "$allmeta$allmeta$allmeta"
ok "get-all" 0 "$allmeta$allmeta$allmeta"	OBJECT . var

tests $c
@


1.2
log
@We are now truly metacharacter safe.  However, there is an internal
function, that fixes embedded "'" inside variables.
@
text
@d7 1
a7 1
ok "" 0 ''	OBJECT . method : "echo a"
d12 1
a12 1
ok "_shoop_tr" 0 "$stuff_fixed"	eval '_shoop_tr "'\''" "'\''\\'\'\''" "$stuff"; echo "$out"'
d16 1
a16 1
ok "_shoop_tr" 0 "$stuff_fixed"	eval '_shoop_tr "'\''" "'\''\\'\'\''" "$stuff"; echo "$out"'
d21 1
a21 1
	ok "$meta" 0 "$meta"		echo "$meta"
d28 1
a28 1
	ok "method-$meta" 0 ""		OBJECT . method : "echo 'a${out}a'"
@


1.1
log
@All shell metacharacters are now supported in variable and method values.
This includes the following characters(delimited by ':'):
:`~!@@#$%^&*(){}[]|\;'"<>? ]:  No special translation is done by shoop on
these characters, only proper quoting is used to make sure everything stays
the way the caller intended.
@
text
@d10 9
a18 1
c=4
d24 1
a24 1
	ok "set-$meta" 0 "a${meta}a"	OBJECT . var = "a$(echo "$meta"|sed 's/'"'/'"'\\'"''/g")a"
d27 2
a28 1
	ok "method-$meta" 0 ""		OBJECT . method : "echo 'a$(echo "$meta"|sed 's/'"'/'"'\\'"''/g")a'"
d32 1
d34 4
@

